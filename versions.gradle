/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
ext.versions = [:]

def versions = [:]
versions.arch_core = "1.1.1"
versions.room = "1.1.1"
versions.lifecycle = "1.1.1"
versions.support = "28.0.0"
versions.dagger = "2.15"
versions.junit = "4.12"
versions.espresso = "3.0.2"
versions.retrofit = "2.3.0"
versions.gsonconverter = "2.4.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.8.0"
versions.mockito_all = "1.10.19"
versions.dexmaker = "2.2.0"
versions.constraint_layout = "1.1.3"
versions.glide = "4.7.1"
versions.timber = "4.5.1"
versions.android_gradle_plugin = "3.1.2"
versions.rxjava2 = "2.1.7"
versions.rx_android = "2.0.1"
versions.atsl_runner = "1.0.2"
versions.atsl_rules = "1.0.1"
versions.hamcrest = "1.3"
versions.kotlin = "1.2.41"
versions.paging = "1.0.1"
versions.navigation = "1.0.0-alpha01"
versions.multidex = "1.0.3"
versions.timber = "4.7.0"
versions.glide = "4.7.1"
versions.rx_lint = "1.6.1"
versions.leak_canary = "1.6.1"
versions.strom_remote = "0.0.14"
versions.right_mesh = "0.10.0"
versions.rm_plugin = '1.8.4'
versions.circularimage = "2.2.0"
versions.uiautomator = "2.1.3"
versions.rxbinding = "2.2.0"
versions.bottom_nav = "1.2.4"
versions.fb_shimmer = "0.4.0"
versions.zxing = "3.4.0"
versions.protobuf = "3.0.1"
versions.dexter = "5.0.0"
versions.appshare = "1.3.5"
versions.parse = "1.17.3"
versions.work = "1.0.1"
versions.location = "16.0.0"
versions.appupdater = "2.7"
versions.debugdb = "1.0.2"
versions.web3j = "4.2.0-android"
versions.bouncy = "1.61"
versions.snatik = "2.1.0"
ext.versions = versions

def deps = [:]

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
//support.v4 = "com.android.support:support-v4:$versions.support"
//support.core_utils = "com.android.support:support-core-utils:$versions.support"
//support.animated_vector_drawable = "com.android.support:animated-vector-drawable:$versions.support"
//support.media_compact = "com.android.support:support-media-compat:$versions.support"
deps.support = support

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"


deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def paging = [:]
paging.runtime = "android.arch.paging:runtime:$versions.paging"
deps.paging = paging

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.gsonconverter"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"

//deps.kotlin = kotlin
//deps.paging = "android.arch.paging:runtime:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide
deps.leak_canary = "com.squareup.leakcanary:leakcanary-android:$versions.leak_canary"
//Strom remote dependency
deps.strom_remote = "com.github.w3-engineers:strom:$versions.strom_remote"
deps.truth = "com.google.truth:truth:0.36"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.livedata_reactive = "android.arch.lifecycle:reactivestreams:$versions.arch_core"
deps.multidex = "com.android.support:multidex:$versions.multidex"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.glide = "com.github.bumptech.glide:glide:$versions.glide"
deps.rxlint_checker = "nl.littlerobots.rxlint:rxlint:$versions.rx_lint"
deps.right_mesh = "io.left.rightmesh:lib-rightmesh-android:$versions.right_mesh"
deps.debugdb = "com.awesomedroidapps:inappstoragereader:$versions.debugdb"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.0"
ext.build_versions = build_versions

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "android.arch.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "android.arch.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
deps.navigation = navigation

def circularimage = [:]
circularimage.runtime = "de.hdodenhof:circleimageview:$versions.circularimage"
deps.circularimage = circularimage

def uiautomator = [:]
uiautomator.automator = "com.android.support.test.uiautomator:uiautomator-v18:$versions.uiautomator"
deps.uiautomator = uiautomator

def rxbinding = [:]
rxbinding.binding2 = "com.jakewharton.rxbinding2:rxbinding:$versions.rxbinding"
deps.rxbinding = rxbinding

def bottom_nav = [:]
bottom_nav.navigation = "com.github.ittianyu:BottomNavigationViewEx:$versions.bottom_nav"
deps.bottom_nav = bottom_nav

def fb_shimmer = [:]
fb_shimmer.shimmer = "com.facebook.shimmer:shimmer:$versions.fb_shimmer"
deps.fb_shimmer = fb_shimmer

def zxing = [:]
zxing.core = "com.google.zxing:core:$versions.zxing"
deps.zxing = zxing

def protobuf = [:]
protobuf.lite = "com.google.protobuf:protobuf-lite:$versions.protobuf"
deps.protobuf = protobuf

def dexter = [:]
dexter.dexter = "com.karumi:dexter:$versions.dexter"
deps.dexter = dexter

def appshare = [:]
appshare.share = "com.w3engineers.appshare:appshare:$versions.appshare"
deps.appshare = appshare

def parse = [:]
parse.server = "com.parse:parse-android:$versions.parse"
deps.parse = parse

deps.snatik = "com.snatik:storage:$versions.snatik"

deps.web3j = "org.web3j:core:$versions.web3j"

def bouncy = [:]
bouncy.group = "org.bouncycastle"
bouncy.castle = "org.bouncycastle:bcprov-jdk15on:$versions.bouncy"
deps.bouncy = bouncy

def location = [:]
location.service = "com.google.android.gms:play-services-location:$versions.location"
deps.location = location

def appupdater = [:]
appupdater.update = "com.github.javiersantos:AppUpdater:$versions.appupdater"
deps.appupdater = appupdater

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.addRepos = this.&addRepos
